name: Docker Compose Deploy to NCP
run-name: OTA Server Deployment to NCP

on:
  workflow_dispatch:
    inputs:
      action:
        description: '실행할 작업'
        required: true
        default: 'deploy'
        type: choice
        options:
          - 'deploy'
          - 'restart'
          - 'stop'
          - 'update'

jobs:
  build-and-push:
    name: OTA Server 이미지 빌드 및 푸시
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3
  
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: OTA 서버 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ota-server:latest ./server
          docker push ${{ secrets.DOCKER_USERNAME }}/ota-server:latest
          
      - name: MySQL 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ota-mysql:latest ./db
          docker push ${{ secrets.DOCKER_USERNAME }}/ota-mysql:latest
          
      - name: 이미지 상태 확인
        run: |
          echo "OTA 서버 이미지: ${{ secrets.DOCKER_USERNAME }}/ota-server:latest"
          echo "MySQL 이미지: ${{ secrets.DOCKER_USERNAME }}/ota-mysql:latest"
          
  deploy:
    name: NCP 서버 배포
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3
        
      - name: 현재 디렉토리 파일 목록 확인
        run: ls -la
        
      - name: 환경 변수 적용 - docker-compose.yml 업데이트
        run: |
          # 환경 변수를 docker-compose.yml에 적용
          sed -i "s|image: sehyunsix/ota-server:latest|image: ${{ secrets.DOCKER_USERNAME }}/ota-server:latest|g" docker-compose.yml
          sed -i "s|image: sehyunsix/ota-mysql:latest|image: ${{ secrets.DOCKER_USERNAME }}/ota-mysql:latest|g" docker-compose.yml
          
          # 수정된 파일 확인
          cat docker-compose.yml
      
      - name: 배포 파일 압축
        run: |
          # 배포에 필요한 파일만 포함
          mkdir -p deploy
          cp docker-compose.yml deploy/
          cp -r db deploy/
          cp deploy.sh deploy/
          chmod +x deploy/deploy.sh
          
          # uploads 디렉토리 생성 (파일 업로드용)
          mkdir -p deploy/uploads
          
          # 압축
          tar -czvf deploy.tar.gz -C deploy .
      
      - name: 파일 전송 및 배포
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          source: "deploy.tar.gz"
          target: "~"
      
      - name: 파일 압축 해제 및 배포 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            # 작업 디렉토리 생성 및 이동
            mkdir -p ~/OTA_Server
            
            # 압축 파일 해제
            tar -xzvf ~/deploy.tar.gz -C ~/OTA_Server
            
            # .env 파일 생성
            cat > ~/OTA_Server/.env << EOL
            DB_HOST=mysql
            DB_USER=root
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=ota_db
            EOL
            
            # Docker Hub 로그인
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            
            # 배포 스크립트 실행
            cd ~/OTA_Server
            chmod +x deploy.sh
            
            # GitHub Actions 입력에 따라 배포 스크립트 실행
            ACTION="${{ github.event.inputs.action }}"
            if [ "$ACTION" == "deploy" ]; then
              ./deploy.sh start
            elif [ "$ACTION" == "restart" ]; then
              ./deploy.sh restart
            elif [ "$ACTION" == "stop" ]; then
              ./deploy.sh stop
            elif [ "$ACTION" == "update" ]; then
              ./deploy.sh update
            else
              ./deploy.sh start
            fi
            
            # 임시 파일 정리
            rm -f ~/deploy.tar.gz
      
      - name: 배포 상태 확인
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            cd ~/OTA_Server
            ./deploy.sh status
